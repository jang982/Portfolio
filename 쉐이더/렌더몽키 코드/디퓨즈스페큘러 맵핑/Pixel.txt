struct PS_INPUT
{
   float2 mUV:TEXCOORD0;
   float3 mDiffuse:TEXCOORD1;
   float3 mViewDir:TEXCOORD2;
   float3 mReflection:TEXCOORD3;
};

sampler2D DiffuseSampler;
sampler2D SpecularSampler;

float3 gLightColor;

float4 ps_main(PS_INPUT Input):COLOR
{
   float4 albedo=tex2D(DiffuseSampler,Input.mUV);
   float3 diffuse=gLightColor*albedo.rgb*saturate(Input.mDiffuse);

 
   
   //보간뒤에 값이 달라질수있으니 다시 노말라이즈
   float3 reflection=normalize(Input.mReflection);
   float3 viewDir=normalize(Input.mViewDir);
   
   float3 specular=0;
   
   //난반사광양이 0%이상이여야됨
   if(diffuse.x>0)                              
   {
      specular=saturate(dot(reflection,-viewDir));
      specular=pow(specular,20.0f);
      
      float4 specularIntensity=tex2D(SpecularSampler,Input.mUV);
      specular*=specularIntensity.rgb*gLightColor;
   }
   
   //주변광
   float3 ambient = float3(0.1f,0.1f,0.1f)*albedo;
   
   
   return float4(ambient+diffuse+specular,1);
}